//
//  menuEvalViewController.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 7/22/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol menuEvalDisplayLogic: class
{
  func displaySomething(viewModel: menuEval.Something.ViewModel)
}

class menuEvalViewController: UIViewController, menuEvalDisplayLogic
{
  var interactor: menuEvalBusinessLogic?
  var router: (NSObjectProtocol & menuEvalRoutingLogic & menuEvalDataPassing)?

    
    
//    MARK:- IBOutlets
    @IBOutlet weak var viewCollab: UIView!
    @IBOutlet weak var goToCollabButton: UIButton!
    @IBOutlet weak var viewManager: UIView!
    
//    MARK:- Action Buttons
    
    @IBAction func backButton(_ sender: Any) {
        self.navigationController?.popViewController(animated: true)
    }

    @IBAction func CollabButton(_ sender: Any) {
        let storyBoard: UIStoryboard = UIStoryboard(name: "Evaluation", bundle: nil)
             let EvaluationCollab = storyBoard.instantiateViewController(withIdentifier: "EvaluationCollabC") as! EvaluationCollaborateurViewController
        self.navigationController?.pushViewController(EvaluationCollab, animated: true)
    }
    
    @IBAction func ManagerButton(_ sender: Any) {
        let storyBoard: UIStoryboard = UIStoryboard(name: "Evaluation", bundle: nil)
             let EvaluationCollab = storyBoard.instantiateViewController(withIdentifier: "ManagerController") as! EvaluationManagerViewController
        self.navigationController?.pushViewController(EvaluationCollab, animated: true)
    }
    
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = menuEvalInteractor()
    let presenter = menuEvalPresenter()
    let router = menuEvalRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    viewCollab.layer.cornerRadius = 15
    viewManager.layer.cornerRadius = 15
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = menuEval.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: menuEval.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
