//
//  EvaluationCollaborateurDetailsInteractor.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 7/10/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EvaluationCollaborateurDetailsBusinessLogic
{
    func doSomething(request: EvaluationCollaborateurDetails.Something.Request)
    func showEvaluationDetails(token : String , code : String)
    func showEvaluationCardsDetails(token : String , code : String)
}

protocol EvaluationCollaborateurDetailsDataStore
{
    //var name: String { get set }
}

class EvaluationCollaborateurDetailsInteractor: EvaluationCollaborateurDetailsBusinessLogic, EvaluationCollaborateurDetailsDataStore
{
    var presenter: EvaluationCollaborateurDetailsPresentationLogic?
    var worker: EvaluationCollaborateurDetailsWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: EvaluationCollaborateurDetails.Something.Request)
    {
        worker = EvaluationCollaborateurDetailsWorker()
        worker?.doSomeWork()
        
        let response = EvaluationCollaborateurDetails.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    
    func showEvaluationDetails(token : String , code : String){
        worker = EvaluationCollaborateurDetailsWorker()
        worker?.showCollaborateurDetailsEvaluations(token: token, code: code).then(){
            evaluationDetails in
            print(evaluationDetails)
            
            self.presenter?.showEvaluationDetailsCollaborateur(responses: evaluationDetails)
            print("wwww")
        }.catch{
            error in
            print(error)
        }
    }
    
    func showEvaluationCardsDetails(token : String , code : String){
        worker = EvaluationCollaborateurDetailsWorker()
        worker?.showCollaborateurCardsEvaluations(token: token, code: code).then(){
            evaluationCards in
            print(evaluationCards.count)
            print("22222")
            if evaluationCards.count != 0 {
                print("many rows")
                self.presenter?.showEvaluationDetailsCardsCollaborateur(responses:  evaluationCards.flatMap { $0.communTargetsCard! })
            }
        else{
//            self.presenter?.showEvaluationDetailsCardsCollaborateurError()
            }
        }
    .catch{
    error in
    print(error)
    }

    }

}
