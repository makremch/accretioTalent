//
//  EvaluationCollaborateurDetailsViewController.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 7/10/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EvaluationCollaborateurDetailsDisplayLogic: class
{
    func displaySomething(viewModel: EvaluationCollaborateurDetails.Something.ViewModel)
    func displayDetails(responses : EvaluationDetailsResponse)
}

class EvaluationCollaborateurDetailsViewController: UIViewController, EvaluationCollaborateurDetailsDisplayLogic
{
    var interactor: EvaluationCollaborateurDetailsBusinessLogic?
    var router: (NSObjectProtocol & EvaluationCollaborateurDetailsRoutingLogic & EvaluationCollaborateurDetailsDataPassing)?
    var content : EvaluationCollab? = nil
    
    
//    MARK:- IBOutlets
    @IBOutlet weak var UserNameLAbel: UILabel!
    @IBOutlet weak var EmployeTypeLabel: UILabel!
    
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup()
    {
        let viewController = self
        let interactor = EvaluationCollaborateurDetailsInteractor()
        let presenter = EvaluationCollaborateurDetailsPresenter()
        let router = EvaluationCollaborateurDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    @IBAction func backButton(_ sender: Any) {
        self.navigationController?.popViewController(animated: true)
        UserDefaults.standard.removeObject(forKey: "codeEvaluation")
    }
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
        let userName = UserDefaults.standard.string(forKey: "nameOfUser")!
        let userLastName = UserDefaults.standard.string(forKey: "lastNameOfUser")!
        let typeUser = UserDefaults.standard.string(forKey: "employeType")!
        
        UserNameLAbel.text = userName + " " + userLastName
        EmployeTypeLabel.text = typeUser
        let token = UserDefaults.standard.string(forKey: "accessToken")!
        let code = UserDefaults.standard.string(forKey: "codeEvaluation")!
        self.interactor?.showEvaluationDetails(token: token, code: code)
    }
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = EvaluationCollaborateurDetails.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: EvaluationCollaborateurDetails.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
    
    func displayDetails(responses : EvaluationDetailsResponse){
        print(responses)
    }
}
