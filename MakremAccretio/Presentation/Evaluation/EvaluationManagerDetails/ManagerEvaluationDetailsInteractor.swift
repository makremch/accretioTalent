//
//  ManagerEvaluationDetailsInteractor.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 7/23/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ManagerEvaluationDetailsBusinessLogic
{
    func doSomething(request: ManagerEvaluationDetails.Something.Request)
    func showEvaluationsManagerDetails(token : String , code : String)
}

protocol ManagerEvaluationDetailsDataStore
{
    //var name: String { get set }
}

class ManagerEvaluationDetailsInteractor: ManagerEvaluationDetailsBusinessLogic, ManagerEvaluationDetailsDataStore
{
    var presenter: ManagerEvaluationDetailsPresentationLogic?
    var worker: ManagerEvaluationDetailsWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: ManagerEvaluationDetails.Something.Request)
    {
        worker = ManagerEvaluationDetailsWorker()
        worker?.doSomeWork()
        
        let response = ManagerEvaluationDetails.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func showEvaluationsManagerDetails(token : String , code : String) {
        worker = ManagerEvaluationDetailsWorker()
        worker?.showManagerEvaluationsDetails(token: token, code: code).then(){
            evaluationManagerDetails in
            print(evaluationManagerDetails)
            print("eval manager details  interactor ! ")
            self.presenter?.showEvaluationManagerDetails(responses: evaluationManagerDetails)
        }.catch{
            error in
            print(error)
        }
    }
    
    
}
