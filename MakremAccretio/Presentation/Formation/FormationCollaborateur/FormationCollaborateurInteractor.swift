//
//  FormationCollaborateurInteractor.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 5/8/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FormationCollaborateurBusinessLogic
{
    func doSomething(request: FormationCollaborateur.Something.Request)
    func getListFormationCollaborateur(token : String)
}

protocol FormationCollaborateurDataStore
{
    //var name: String { get set }
}

class FormationCollaborateurInteractor: FormationCollaborateurBusinessLogic, FormationCollaborateurDataStore
{
    var presenter: FormationCollaborateurPresentationLogic?
    var worker: FormationCollaborateurWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: FormationCollaborateur.Something.Request)
    {
        worker = FormationCollaborateurWorker()
        worker?.doSomeWork()
        
        let response = FormationCollaborateur.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func getListFormationCollaborateur(token : String){
        worker = FormationCollaborateurWorker()
        worker?.getListFormationCollaborateur(token: token).then(){
            formationCollaborateur in
            print("******************************")
            print("In Interactor demande Collaborateur ! ")
            print(formationCollaborateur)
            self.presenter?.sendDataFormationCollaborateur(response:formationCollaborateur)
        }.catch{
            error in
            print(error)
        }
    }
}
