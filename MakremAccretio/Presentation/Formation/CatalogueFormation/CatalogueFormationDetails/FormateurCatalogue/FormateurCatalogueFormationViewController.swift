//
//  FormateurCatalogueFormationViewController.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 5/19/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol FormateurCatalogueFormationDisplayLogic: class
{
  func displaySomething(viewModel: FormateurCatalogueFormation.Something.ViewModel)
}

class FormateurCatalogueFormationViewController: UIViewController, FormateurCatalogueFormationDisplayLogic,UITableViewDelegate,UITableViewDataSource
{
   
    
  var interactor: FormateurCatalogueFormationBusinessLogic?
  var router: (NSObjectProtocol & FormateurCatalogueFormationRoutingLogic & FormateurCatalogueFormationDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = FormateurCatalogueFormationInteractor()
    let presenter = FormateurCatalogueFormationPresenter()
    let router = FormateurCatalogueFormationRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = FormateurCatalogueFormation.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: FormateurCatalogueFormation.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    
    var dataFormateur : [String] = ["ameni jmaiel","Kawthar GUESMI","Nesrine CHOUROU","Ali BEN BRAHIM","Mariem Magdoud","Karim ZEKRI","ilhem rahmani","Hafedh TLILI"]
    
    @IBOutlet weak var tableView: UITableView!
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return dataFormateur.count
       }
       
       func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
           guard let  cell = tableView.dequeueReusableCell(withIdentifier: "formateurCell", for: indexPath) as?
                      FormateurCatalogueFormationViewControllerCell
                      else {
                          return UITableViewCell()
                  }
                  
        cell.nomPrenomLabel.text = dataFormateur[indexPath.row]
        cell.emailLabel.text = "makrem.hamani@esprit.tn"
        cell.telLabel.text = "+216.58.858.597"
                  
                  return cell
        
       }
    
    
    
    
    
    
    
    
    
}
