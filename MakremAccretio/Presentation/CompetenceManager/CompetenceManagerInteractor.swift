//
//  CompetenceManagerInteractor.swift
//  MakremAccretio
//
//  Created by Makrem chambah on 6/21/20.
//  Copyright (c) 2020 Makrem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CompetenceManagerBusinessLogic
{
    func doSomething(request: CompetenceManager.Something.Request)
    func getListCompetenceManager(token : String )
}

protocol CompetenceManagerDataStore
{
    //var name: String { get set }
}

class CompetenceManagerInteractor: CompetenceManagerBusinessLogic, CompetenceManagerDataStore
{
    var presenter: CompetenceManagerPresentationLogic?
    var worker: CompetenceManagerWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doSomething(request: CompetenceManager.Something.Request)
    {
        worker = CompetenceManagerWorker()
        worker?.doSomeWork()
        
        let response = CompetenceManager.Something.Response()
        presenter?.presentSomething(response: response)
    }
    
    func getListCompetenceManager(token : String ) {
        worker = CompetenceManagerWorker()
        worker?.getCompetenceManager(token: token).then() {
            competenceManager in
//            print("in Interactor Formation : ***************************")
            print(competenceManager)
//            print("***********************************************************")
            self.presenter?.showCompetenceManager(response: competenceManager)
        }.catch {error in
            print(error)
            //            self.presenter?.presentSignInError(error: error)
        }
    }
    
    
    
}
